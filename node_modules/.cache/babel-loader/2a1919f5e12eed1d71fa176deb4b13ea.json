{"ast":null,"code":"import _classCallCheck from \"/var/www/html/random-quotes-machine/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/random-quotes-machine/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/random-quotes-machine/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/random-quotes-machine/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/var/www/html/random-quotes-machine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/var/www/html/random-quotes-machine/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/random-quotes-machine/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar newQuote = function newQuote() {\n  var quotes = [{\n    'quote': 'I love you the more in that I believe you had liked me for my own sake and for nothing else.',\n    'author': 'John Keats'\n  }, {\n    'quote': 'But man is not made for defeat. A man can be destroyed but not defeated.',\n    'author': 'Ernest Hemingway'\n  }, {\n    'quote': 'When you reach the end of your rope, tie a knot in it and hang on.',\n    'author': 'Franklin D. Roosevelt'\n  }, {\n    'quote': 'There is nothing permanent except change.',\n    'author': 'Heraclitus'\n  }, {\n    'quote': 'You cannot shake hands with a clenched fist.',\n    'author': 'Indira Gandhi'\n  }, {\n    'quote': 'Find a place inside where there\\'s joy, and the joy will burn out the pain.',\n    'author': 'Joseph Campbell'\n  }, {\n    'quote': 'Try to be a rainbow in someone\\'s cloud.',\n    'author': 'Maya Angelou'\n  }, {\n    'quote': 'It is during our darkest moments that we must focus to see the light.',\n    'author': 'Aristotle'\n  }, {\n    'quote': 'Keep love in your heart. A life without it is like a sunless garden when the flowers are dead.',\n    'author': 'Oscar Wilde'\n  }, {\n    'quote': 'The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.',\n    'author': 'Helen Keller'\n  }];\n  var index = Math.floor(Math.random() * quotes.length);\n  return {\n    \"quote\": quotes[index].quote,\n    \"author\": quotes[index].author\n  };\n};\n\nvar RQM =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RQM, _Component);\n\n  function RQM(props) {\n    var _this;\n\n    _classCallCheck(this, RQM);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RQM).call(this, props));\n    var firstQuote = newQuote();\n    _this.state = {\n      quote: firstQuote.quote,\n      author: firstQuote.author\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RQM, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var tempQuote = newQuote();\n      this.setState({\n        quote: tempQuote.quote,\n        author: tempQuote.author\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fa fa-quote-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", this.state.quote, \" \"), React.createElement(\"span\", {\n        class: \"fa fa-quote-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.author), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        href: \"https://twitter.com/intent/tweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), \" Tweet this quote\"), React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-angle-double-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \" Display a new quote\")));\n    }\n  }]);\n\n  return RQM;\n}(Component);\n\n;\nexport default RQM;","map":{"version":3,"sources":["/var/www/html/random-quotes-machine/src/App.js"],"names":["React","Component","newQuote","quotes","index","Math","floor","random","length","quote","author","RQM","props","firstQuote","state","handleClick","bind","tempQuote","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAIC,MAAM,GAAG,CACX;AAAC,aAAS,8FAAV;AAA0G,cAAU;AAApH,GADW,EAEX;AAAC,aAAS,0EAAV;AAAsF,cAAU;AAAhG,GAFW,EAGX;AAAC,aAAS,oEAAV;AAAgF,cAAS;AAAzF,GAHW,EAIX;AAAC,aAAS,2CAAV;AAAuD,cAAU;AAAjE,GAJW,EAKX;AAAC,aAAS,8CAAV;AAA0D,cAAU;AAApE,GALW,EAMX;AAAC,aAAS,6EAAV;AAAwF,cAAS;AAAjG,GANW,EAOX;AAAC,aAAQ,0CAAT;AAAqD,cAAU;AAA/D,GAPW,EAQX;AAAC,aAAQ,uEAAT;AAAkF,cAAU;AAA5F,GARW,EASX;AAAC,aAAQ,gGAAT;AAA2G,cAAU;AAArH,GATW,EAUX;AAAC,aAAS,oHAAV;AAAgI,cAAU;AAA1I,GAVW,CAAb;AAYA,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAAM,CAACK,MAAlC,CAAZ;AACA,SAAO;AAAC,aAASL,MAAM,CAACC,KAAD,CAAN,CAAcK,KAAxB;AAA+B,cAAUN,MAAM,CAACC,KAAD,CAAN,CAAcM;AAAvD,GAAP;AACD,CAfD;;IAiBMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,QAAIC,UAAU,GAAGX,QAAQ,EAAzB;AACA,UAAKY,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAEI,UAAU,CAACJ,KADP;AAEXC,MAAAA,MAAM,EAAEG,UAAU,CAACH;AAFR,KAAb;AAIA,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAPiB;AAQlB;;;;kCACY;AACX,UAAIC,SAAS,GAAGf,QAAQ,EAAxB;AACA,WAAKgB,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAEQ,SAAS,CAACR,KAAlB;AAAyBC,QAAAA,MAAM,EAAEO,SAAS,CAACP;AAA3C,OAAd;AACD;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EACwC;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkB,KAAKI,KAAL,CAAWL,KAA7B,MADxC,EACmF;AAAM,QAAA,KAAK,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnF,EAEE;AAAG,QAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,KAAKK,KAAL,CAAWJ,MAA3B,CAFF,EAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,IAAI,EAAC,kCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4D;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5D,sBADF,EAEE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,KAAKK,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkD;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlD,yBAFF,CAHF,CADF;AAUD;;;;EAzBed,S;;AA0BjB;AAED,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst newQuote = () => {\n  let quotes = [\n    {'quote': 'I love you the more in that I believe you had liked me for my own sake and for nothing else.', 'author': 'John Keats'},\n    {'quote': 'But man is not made for defeat. A man can be destroyed but not defeated.', 'author': 'Ernest Hemingway'},\n    {'quote': 'When you reach the end of your rope, tie a knot in it and hang on.', 'author':'Franklin D. Roosevelt'},\n    {'quote': 'There is nothing permanent except change.', 'author': 'Heraclitus'},\n    {'quote': 'You cannot shake hands with a clenched fist.', 'author': 'Indira Gandhi'},\n    {'quote': 'Find a place inside where there\\'s joy, and the joy will burn out the pain.','author':'Joseph Campbell'},\n    {'quote':'Try to be a rainbow in someone\\'s cloud.', 'author': 'Maya Angelou'},\n    {'quote':'It is during our darkest moments that we must focus to see the light.', 'author': 'Aristotle'},\n    {'quote':'Keep love in your heart. A life without it is like a sunless garden when the flowers are dead.', 'author': 'Oscar Wilde'},\n    {'quote': 'The best and most beautiful things in the world cannot be seen or even touched - they must be felt with the heart.', 'author': 'Helen Keller'}\n  ];\n  let index = Math.floor(Math.random() * quotes.length);\n  return {\"quote\": quotes[index].quote, \"author\": quotes[index].author};\n}\n\nclass RQM extends Component {\n  constructor(props) {\n    super(props);\n    let firstQuote = newQuote();\n    this.state = {\n      quote: firstQuote.quote,\n      author: firstQuote.author\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(){\n    let tempQuote = newQuote();\n    this.setState({quote: tempQuote.quote, author: tempQuote.author});\n  }\n  render() {\n    return (\n      <div>\n        <span class=\"fa fa-quote-left\"></span><span id=\"text\"> {this.state.quote} </span><span class=\"fa fa-quote-right\"></span>\n        <p id=\"author\">{this.state.author}</p>\n        <div className=\"row\">\n          <a id=\"tweet-quote\" href=\"https://twitter.com/intent/tweet\"><i className=\"fa fa-twitter\"></i> Tweet this quote</a>\n          <button id=\"new-quote\" onClick={this.handleClick}><i className=\"fa fa-angle-double-right\"></i> Display a new quote</button>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default RQM;\n"]},"metadata":{},"sourceType":"module"}